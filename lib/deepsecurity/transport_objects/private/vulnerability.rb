module DeepSecurity

  # This class encapsulates a vulnerability
  # @private
  class Vulnerability

    attr_accessor :dpi_rule_identifier
    attr_accessor :cve_identifiers
    attr_accessor :secunia_identifiers
    attr_accessor :bugtraq_identifiers
    attr_accessor :microsoft_identifiers

    def parse_vulnerabilities_string(string)
      return [] if string.strip == "N/A"
      string.split(",").map { |each| each.strip }
    end

    def cve_identifiers_string=(string)
      @cve_identifiers = parse_vulnerabilities_string(string)
    end

    def secunia_identifiers_string=(string)
      @secunia_identifiers = parse_vulnerabilities_string(string)
    end

    def bugtraq_identifiers_string=(string)
      @bugtraq_identifiers = parse_vulnerabilities_string(string)
    end

    def microsoft_identifiers_string=(string)
      @microsoft_identifiers = parse_vulnerabilities_string(string)
    end

  end

  class Manager

    def vulnerabilities
      payload_filters2_enable_vulnerability_columns()
      payload_filters2().map do |hash|
        vulnerability = Vulnerability.new
        vulnerability.dpi_rule_identifier = hash[:name].split(' ').first
        vulnerability.cve_identifiers_string = hash[:cve]
        vulnerability.secunia_identifiers_string = hash[:secunia]
        vulnerability.bugtraq_identifiers_string = hash[:bugtraq]
        vulnerability.microsoft_identifiers_string = hash[:microsoft]
        vulnerability
      end
    end

  end
end