#!/usr/bin/env ruby

# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')

require 'rubygems'
require 'gli'

require 'deepsecurity'
require 'dsc'

include GLI::App

# config_file '.dsc.rc'

program_desc 'DeepSecurity command line client'

version Dsc::VERSION

Dsc::Command.define_global_flags(self)
Dsc::Command.define_misc_commands(self)

Dsc::HostDetailCommand.define_commands(self)

command_class = Dsc::AntiMalwareEventCommand
desc "Access #{command_class.transport_class_string}s"
command command_class.command_symbol do |c|
  command_class.define_list_command(c)
  command_class.define_schema_command(c)
end

pre do |global, command, options, args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global, command, options, args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
